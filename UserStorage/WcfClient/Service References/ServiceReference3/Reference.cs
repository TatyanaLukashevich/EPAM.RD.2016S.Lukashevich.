//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference3 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IUSContract")]
    public interface IUSContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/Add", ReplyAction="http://tempuri.org/IUSContract/AddResponse")]
        void Add(UserStorage.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/Add", ReplyAction="http://tempuri.org/IUSContract/AddResponse")]
        System.Threading.Tasks.Task AddAsync(UserStorage.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/Delete", ReplyAction="http://tempuri.org/IUSContract/DeleteResponse")]
        void Delete(UserStorage.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/Delete", ReplyAction="http://tempuri.org/IUSContract/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(UserStorage.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/FindByTag", ReplyAction="http://tempuri.org/IUSContract/FindByTagResponse")]
        int[] FindByTag(System.Func<UserStorage.User, bool> criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/FindByTag", ReplyAction="http://tempuri.org/IUSContract/FindByTagResponse")]
        System.Threading.Tasks.Task<int[]> FindByTagAsync(System.Func<UserStorage.User, bool> criteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/WriteToXML", ReplyAction="http://tempuri.org/IUSContract/WriteToXMLResponse")]
        void WriteToXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/WriteToXML", ReplyAction="http://tempuri.org/IUSContract/WriteToXMLResponse")]
        System.Threading.Tasks.Task WriteToXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/ReadFromXML", ReplyAction="http://tempuri.org/IUSContract/ReadFromXMLResponse")]
        void ReadFromXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUSContract/ReadFromXML", ReplyAction="http://tempuri.org/IUSContract/ReadFromXMLResponse")]
        System.Threading.Tasks.Task ReadFromXMLAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUSContractChannel : WcfClient.ServiceReference3.IUSContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class USContractClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference3.IUSContract>, WcfClient.ServiceReference3.IUSContract {
        
        public USContractClient() {
        }
        
        public USContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public USContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(UserStorage.User user) {
            base.Channel.Add(user);
        }
        
        public System.Threading.Tasks.Task AddAsync(UserStorage.User user) {
            return base.Channel.AddAsync(user);
        }
        
        public void Delete(UserStorage.User user) {
            base.Channel.Delete(user);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(UserStorage.User user) {
            return base.Channel.DeleteAsync(user);
        }
        
        public int[] FindByTag(System.Func<UserStorage.User, bool> criteria) {
            return base.Channel.FindByTag(criteria);
        }
        
        public System.Threading.Tasks.Task<int[]> FindByTagAsync(System.Func<UserStorage.User, bool> criteria) {
            return base.Channel.FindByTagAsync(criteria);
        }
        
        public void WriteToXML() {
            base.Channel.WriteToXML();
        }
        
        public System.Threading.Tasks.Task WriteToXMLAsync() {
            return base.Channel.WriteToXMLAsync();
        }
        
        public void ReadFromXML() {
            base.Channel.ReadFromXML();
        }
        
        public System.Threading.Tasks.Task ReadFromXMLAsync() {
            return base.Channel.ReadFromXMLAsync();
        }
    }
}
